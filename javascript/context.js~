/**
 * Crea una instància de Context. 
 * Amb aquest objecte (Singleton) per cert. Mantenim el context del joc: vides, on/off posicionament dels
 * objectes en pantalla etc. Serveix com a pont a la resta d'objectes que composen el joc
 *
 * @constructor
 * @this {Context}
 */
function Context(){
    
    this.gameStarted=false; //True el joc està en marxa. False el joc està parat
    this.lives=3; 
    
    //Inicialitzem els objectes del joc
    this.init= function(){
	
    	this.ball=new Ball(this);	
    	this.viewporte();
	this.ball.locate((this.vpWidth/2)-32,(this.vpHeight/2)-32);  //Posicionem pilota al mig   		 
   	this.stick=new Stick(this);
   	this.stick.locate((this.vpWidth/2)-32,25);  //Posicionem Stick al mig
   	this.setBanner("Polsa la barra espaiadora per començar i/o parar el joc quan estigues preparat");
   		
   };
	//Comença el joc. La bola comença a moures
    this.start=function(){		
		this.ball.start();
		this.gameStarted=true;
		this.setBanner("");
	};

	//Para el joc
    this.stop=function(){
   		this.ball.stop();
   		this.gameStarted=false;
   		this.setBanner("Polsa la barra espaiadora per començar i/o parar el joc quan estigues preparat");
	}
	this.setBanner=function(message){
		document.getElementById('banner').innerHTML =message;
	}

	//Manté el número de vides del joc o si és GAME OVER
    this.takeLive=function(){
		this.lives=this.lives-1;
		if (this.lives==0) {
			alert("GAME OVER");
			this.stop();
			init();
		}else {
			
			this.stop();
			this.init();
			
			alert(this.lives+" LEFT ");
		}
    };
	
	/* 
	*	Usada per calcular la resolució de la finesta en la que el joc començara. Imprescindible
	*   per calcular rebots i llímits
	*/
    this.viewporte= function(){
		var viewportwidth;
 		var viewportheight;
  
 		// the more standards compliant browsers (mozilla/netscape/opera/IE7) use window.innerWidth and window.innerHeight
  
 		if (typeof window.innerWidth != 'undefined')
 		{
      		viewportwidth = window.innerWidth,
      		viewportheight = window.innerHeight
 		}
  
		// IE6 in standards compliant mode (i.e. with a valid doctype as the first line in the document)
 
 		else if (typeof document.documentElement != 'undefined'&& typeof document.documentElement.clientWidth !='undefined' && document.documentElement.clientWidth != 0)
		{
       		viewportwidth = document.documentElement.clientWidth,
	        viewportheight = document.documentElement.clientHeight
		}
  
	 	// older versions of IE
  
	 	else
		{
       		viewportwidth = document.getElementsByTagName('body')[0].clientWidth,
	        viewportheight = document.getElementsByTagName('body')[0].clientHeight
 		}
 		
 		this.vpWidth=viewportwidth;
 		this.vpHeight=viewportheight;
 		
		//return { width : viewportwidth , height : viewportheight };
	};	
} //End class context
